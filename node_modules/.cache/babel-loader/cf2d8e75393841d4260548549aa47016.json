{"ast":null,"code":"var Vec3 = require('../math/Vec3');\n\nvar Transform = require('../math/Transform');\n\nvar RaycastResult = require('../collision/RaycastResult');\n\nvar Utils = require('../utils/Utils');\n\nmodule.exports = WheelInfo;\n/**\n * @class WheelInfo\n * @constructor\n * @param {Object} [options]\n *\n * @param {Vec3} [options.chassisConnectionPointLocal]\n * @param {Vec3} [options.chassisConnectionPointWorld]\n * @param {Vec3} [options.directionLocal]\n * @param {Vec3} [options.directionWorld]\n * @param {Vec3} [options.axleLocal]\n * @param {Vec3} [options.axleWorld]\n * @param {number} [options.suspensionRestLength=1]\n * @param {number} [options.suspensionMaxLength=2]\n * @param {number} [options.radius=1]\n * @param {number} [options.suspensionStiffness=100]\n * @param {number} [options.dampingCompression=10]\n * @param {number} [options.dampingRelaxation=10]\n * @param {number} [options.frictionSlip=10000]\n * @param {number} [options.steering=0]\n * @param {number} [options.rotation=0]\n * @param {number} [options.deltaRotation=0]\n * @param {number} [options.rollInfluence=0.01]\n * @param {number} [options.maxSuspensionForce]\n * @param {boolean} [options.isFrontWheel=true]\n * @param {number} [options.clippedInvContactDotSuspension=1]\n * @param {number} [options.suspensionRelativeVelocity=0]\n * @param {number} [options.suspensionForce=0]\n * @param {number} [options.skidInfo=0]\n * @param {number} [options.suspensionLength=0]\n * @param {number} [options.maxSuspensionTravel=1]\n * @param {boolean} [options.useCustomSlidingRotationalSpeed=false]\n * @param {number} [options.customSlidingRotationalSpeed=-0.1]\n */\n\nfunction WheelInfo(options) {\n  options = Utils.defaults(options, {\n    chassisConnectionPointLocal: new Vec3(),\n    chassisConnectionPointWorld: new Vec3(),\n    directionLocal: new Vec3(),\n    directionWorld: new Vec3(),\n    axleLocal: new Vec3(),\n    axleWorld: new Vec3(),\n    suspensionRestLength: 1,\n    suspensionMaxLength: 2,\n    radius: 1,\n    suspensionStiffness: 100,\n    dampingCompression: 10,\n    dampingRelaxation: 10,\n    frictionSlip: 10000,\n    steering: 0,\n    rotation: 0,\n    deltaRotation: 0,\n    rollInfluence: 0.01,\n    maxSuspensionForce: Number.MAX_VALUE,\n    isFrontWheel: true,\n    clippedInvContactDotSuspension: 1,\n    suspensionRelativeVelocity: 0,\n    suspensionForce: 0,\n    skidInfo: 0,\n    suspensionLength: 0,\n    maxSuspensionTravel: 1,\n    useCustomSlidingRotationalSpeed: false,\n    customSlidingRotationalSpeed: -0.1\n  });\n  /**\n   * Max travel distance of the suspension, in meters.\n   * @property {number} maxSuspensionTravel\n   */\n\n  this.maxSuspensionTravel = options.maxSuspensionTravel;\n  /**\n   * Speed to apply to the wheel rotation when the wheel is sliding.\n   * @property {number} customSlidingRotationalSpeed\n   */\n\n  this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\n  /**\n   * If the customSlidingRotationalSpeed should be used.\n   * @property {Boolean} useCustomSlidingRotationalSpeed\n   */\n\n  this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\n  /**\n   * @property {Boolean} sliding\n   */\n\n  this.sliding = false;\n  /**\n   * Connection point, defined locally in the chassis body frame.\n   * @property {Vec3} chassisConnectionPointLocal\n   */\n\n  this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\n  /**\n   * @property {Vec3} chassisConnectionPointWorld\n   */\n\n  this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\n  /**\n   * @property {Vec3} directionLocal\n   */\n\n  this.directionLocal = options.directionLocal.clone();\n  /**\n   * @property {Vec3} directionWorld\n   */\n\n  this.directionWorld = options.directionWorld.clone();\n  /**\n   * @property {Vec3} axleLocal\n   */\n\n  this.axleLocal = options.axleLocal.clone();\n  /**\n   * @property {Vec3} axleWorld\n   */\n\n  this.axleWorld = options.axleWorld.clone();\n  /**\n   * @property {number} suspensionRestLength\n   */\n\n  this.suspensionRestLength = options.suspensionRestLength;\n  /**\n   * @property {number} suspensionMaxLength\n   */\n\n  this.suspensionMaxLength = options.suspensionMaxLength;\n  /**\n   * @property {number} radius\n   */\n\n  this.radius = options.radius;\n  /**\n   * @property {number} suspensionStiffness\n   */\n\n  this.suspensionStiffness = options.suspensionStiffness;\n  /**\n   * @property {number} dampingCompression\n   */\n\n  this.dampingCompression = options.dampingCompression;\n  /**\n   * @property {number} dampingRelaxation\n   */\n\n  this.dampingRelaxation = options.dampingRelaxation;\n  /**\n   * @property {number} frictionSlip\n   */\n\n  this.frictionSlip = options.frictionSlip;\n  /**\n   * @property {number} steering\n   */\n\n  this.steering = 0;\n  /**\n   * Rotation value, in radians.\n   * @property {number} rotation\n   */\n\n  this.rotation = 0;\n  /**\n   * @property {number} deltaRotation\n   */\n\n  this.deltaRotation = 0;\n  /**\n   * @property {number} rollInfluence\n   */\n\n  this.rollInfluence = options.rollInfluence;\n  /**\n   * @property {number} maxSuspensionForce\n   */\n\n  this.maxSuspensionForce = options.maxSuspensionForce;\n  /**\n   * @property {number} engineForce\n   */\n\n  this.engineForce = 0;\n  /**\n   * @property {number} brake\n   */\n\n  this.brake = 0;\n  /**\n   * @property {number} isFrontWheel\n   */\n\n  this.isFrontWheel = options.isFrontWheel;\n  /**\n   * @property {number} clippedInvContactDotSuspension\n   */\n\n  this.clippedInvContactDotSuspension = 1;\n  /**\n   * @property {number} suspensionRelativeVelocity\n   */\n\n  this.suspensionRelativeVelocity = 0;\n  /**\n   * @property {number} suspensionForce\n   */\n\n  this.suspensionForce = 0;\n  /**\n   * @property {number} skidInfo\n   */\n\n  this.skidInfo = 0;\n  /**\n   * @property {number} suspensionLength\n   */\n\n  this.suspensionLength = 0;\n  /**\n   * @property {number} sideImpulse\n   */\n\n  this.sideImpulse = 0;\n  /**\n   * @property {number} forwardImpulse\n   */\n\n  this.forwardImpulse = 0;\n  /**\n   * The result from raycasting\n   * @property {RaycastResult} raycastResult\n   */\n\n  this.raycastResult = new RaycastResult();\n  /**\n   * Wheel world transform\n   * @property {Transform} worldTransform\n   */\n\n  this.worldTransform = new Transform();\n  /**\n   * @property {boolean} isInContact\n   */\n\n  this.isInContact = false;\n}\n\nvar chassis_velocity_at_contactPoint = new Vec3();\nvar relpos = new Vec3();\nvar chassis_velocity_at_contactPoint = new Vec3();\n\nWheelInfo.prototype.updateWheel = function (chassis) {\n  var raycastResult = this.raycastResult;\n\n  if (this.isInContact) {\n    var project = raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\n    raycastResult.hitPointWorld.vsub(chassis.position, relpos);\n    chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\n    var projVel = raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\n\n    if (project >= -0.1) {\n      this.suspensionRelativeVelocity = 0.0;\n      this.clippedInvContactDotSuspension = 1.0 / 0.1;\n    } else {\n      var inv = -1 / project;\n      this.suspensionRelativeVelocity = projVel * inv;\n      this.clippedInvContactDotSuspension = inv;\n    }\n  } else {\n    // Not in contact : position wheel in a nice (rest length) position\n    raycastResult.suspensionLength = this.suspensionRestLength;\n    this.suspensionRelativeVelocity = 0.0;\n    raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\n    this.clippedInvContactDotSuspension = 1.0;\n  }\n};","map":{"version":3,"sources":["C:/Users/aite5/Desktop/nabla.ooo/node_modules/cannon/src/objects/WheelInfo.js"],"names":["Vec3","require","Transform","RaycastResult","Utils","module","exports","WheelInfo","options","defaults","chassisConnectionPointLocal","chassisConnectionPointWorld","directionLocal","directionWorld","axleLocal","axleWorld","suspensionRestLength","suspensionMaxLength","radius","suspensionStiffness","dampingCompression","dampingRelaxation","frictionSlip","steering","rotation","deltaRotation","rollInfluence","maxSuspensionForce","Number","MAX_VALUE","isFrontWheel","clippedInvContactDotSuspension","suspensionRelativeVelocity","suspensionForce","skidInfo","suspensionLength","maxSuspensionTravel","useCustomSlidingRotationalSpeed","customSlidingRotationalSpeed","sliding","clone","engineForce","brake","sideImpulse","forwardImpulse","raycastResult","worldTransform","isInContact","chassis_velocity_at_contactPoint","relpos","prototype","updateWheel","chassis","project","hitNormalWorld","dot","hitPointWorld","vsub","position","getVelocityAtWorldPoint","projVel","inv","scale"],"mappings":"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","sourcesContent":["var Vec3 = require('../math/Vec3');\nvar Transform = require('../math/Transform');\nvar RaycastResult = require('../collision/RaycastResult');\nvar Utils = require('../utils/Utils');\n\nmodule.exports = WheelInfo;\n\n/**\n * @class WheelInfo\n * @constructor\n * @param {Object} [options]\n *\n * @param {Vec3} [options.chassisConnectionPointLocal]\n * @param {Vec3} [options.chassisConnectionPointWorld]\n * @param {Vec3} [options.directionLocal]\n * @param {Vec3} [options.directionWorld]\n * @param {Vec3} [options.axleLocal]\n * @param {Vec3} [options.axleWorld]\n * @param {number} [options.suspensionRestLength=1]\n * @param {number} [options.suspensionMaxLength=2]\n * @param {number} [options.radius=1]\n * @param {number} [options.suspensionStiffness=100]\n * @param {number} [options.dampingCompression=10]\n * @param {number} [options.dampingRelaxation=10]\n * @param {number} [options.frictionSlip=10000]\n * @param {number} [options.steering=0]\n * @param {number} [options.rotation=0]\n * @param {number} [options.deltaRotation=0]\n * @param {number} [options.rollInfluence=0.01]\n * @param {number} [options.maxSuspensionForce]\n * @param {boolean} [options.isFrontWheel=true]\n * @param {number} [options.clippedInvContactDotSuspension=1]\n * @param {number} [options.suspensionRelativeVelocity=0]\n * @param {number} [options.suspensionForce=0]\n * @param {number} [options.skidInfo=0]\n * @param {number} [options.suspensionLength=0]\n * @param {number} [options.maxSuspensionTravel=1]\n * @param {boolean} [options.useCustomSlidingRotationalSpeed=false]\n * @param {number} [options.customSlidingRotationalSpeed=-0.1]\n */\nfunction WheelInfo(options){\n    options = Utils.defaults(options, {\n        chassisConnectionPointLocal: new Vec3(),\n        chassisConnectionPointWorld: new Vec3(),\n        directionLocal: new Vec3(),\n        directionWorld: new Vec3(),\n        axleLocal: new Vec3(),\n        axleWorld: new Vec3(),\n        suspensionRestLength: 1,\n        suspensionMaxLength: 2,\n        radius: 1,\n        suspensionStiffness: 100,\n        dampingCompression: 10,\n        dampingRelaxation: 10,\n        frictionSlip: 10000,\n        steering: 0,\n        rotation: 0,\n        deltaRotation: 0,\n        rollInfluence: 0.01,\n        maxSuspensionForce: Number.MAX_VALUE,\n        isFrontWheel: true,\n        clippedInvContactDotSuspension: 1,\n        suspensionRelativeVelocity: 0,\n        suspensionForce: 0,\n        skidInfo: 0,\n        suspensionLength: 0,\n        maxSuspensionTravel: 1,\n        useCustomSlidingRotationalSpeed: false,\n        customSlidingRotationalSpeed: -0.1\n    });\n\n    /**\n     * Max travel distance of the suspension, in meters.\n     * @property {number} maxSuspensionTravel\n     */\n    this.maxSuspensionTravel = options.maxSuspensionTravel;\n\n    /**\n     * Speed to apply to the wheel rotation when the wheel is sliding.\n     * @property {number} customSlidingRotationalSpeed\n     */\n    this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\n\n    /**\n     * If the customSlidingRotationalSpeed should be used.\n     * @property {Boolean} useCustomSlidingRotationalSpeed\n     */\n    this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\n\n    /**\n     * @property {Boolean} sliding\n     */\n    this.sliding = false;\n\n    /**\n     * Connection point, defined locally in the chassis body frame.\n     * @property {Vec3} chassisConnectionPointLocal\n     */\n    this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\n\n    /**\n     * @property {Vec3} chassisConnectionPointWorld\n     */\n    this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\n\n    /**\n     * @property {Vec3} directionLocal\n     */\n    this.directionLocal = options.directionLocal.clone();\n\n    /**\n     * @property {Vec3} directionWorld\n     */\n    this.directionWorld = options.directionWorld.clone();\n\n    /**\n     * @property {Vec3} axleLocal\n     */\n    this.axleLocal = options.axleLocal.clone();\n\n    /**\n     * @property {Vec3} axleWorld\n     */\n    this.axleWorld = options.axleWorld.clone();\n\n    /**\n     * @property {number} suspensionRestLength\n     */\n    this.suspensionRestLength = options.suspensionRestLength;\n\n    /**\n     * @property {number} suspensionMaxLength\n     */\n    this.suspensionMaxLength = options.suspensionMaxLength;\n\n    /**\n     * @property {number} radius\n     */\n    this.radius = options.radius;\n\n    /**\n     * @property {number} suspensionStiffness\n     */\n    this.suspensionStiffness = options.suspensionStiffness;\n\n    /**\n     * @property {number} dampingCompression\n     */\n    this.dampingCompression = options.dampingCompression;\n\n    /**\n     * @property {number} dampingRelaxation\n     */\n    this.dampingRelaxation = options.dampingRelaxation;\n\n    /**\n     * @property {number} frictionSlip\n     */\n    this.frictionSlip = options.frictionSlip;\n\n    /**\n     * @property {number} steering\n     */\n    this.steering = 0;\n\n    /**\n     * Rotation value, in radians.\n     * @property {number} rotation\n     */\n    this.rotation = 0;\n\n    /**\n     * @property {number} deltaRotation\n     */\n    this.deltaRotation = 0;\n\n    /**\n     * @property {number} rollInfluence\n     */\n    this.rollInfluence = options.rollInfluence;\n\n    /**\n     * @property {number} maxSuspensionForce\n     */\n    this.maxSuspensionForce = options.maxSuspensionForce;\n\n    /**\n     * @property {number} engineForce\n     */\n    this.engineForce = 0;\n\n    /**\n     * @property {number} brake\n     */\n    this.brake = 0;\n\n    /**\n     * @property {number} isFrontWheel\n     */\n    this.isFrontWheel = options.isFrontWheel;\n\n    /**\n     * @property {number} clippedInvContactDotSuspension\n     */\n    this.clippedInvContactDotSuspension = 1;\n\n    /**\n     * @property {number} suspensionRelativeVelocity\n     */\n    this.suspensionRelativeVelocity = 0;\n\n    /**\n     * @property {number} suspensionForce\n     */\n    this.suspensionForce = 0;\n\n    /**\n     * @property {number} skidInfo\n     */\n    this.skidInfo = 0;\n\n    /**\n     * @property {number} suspensionLength\n     */\n    this.suspensionLength = 0;\n\n    /**\n     * @property {number} sideImpulse\n     */\n    this.sideImpulse = 0;\n\n    /**\n     * @property {number} forwardImpulse\n     */\n    this.forwardImpulse = 0;\n\n    /**\n     * The result from raycasting\n     * @property {RaycastResult} raycastResult\n     */\n    this.raycastResult = new RaycastResult();\n\n    /**\n     * Wheel world transform\n     * @property {Transform} worldTransform\n     */\n    this.worldTransform = new Transform();\n\n    /**\n     * @property {boolean} isInContact\n     */\n    this.isInContact = false;\n}\n\nvar chassis_velocity_at_contactPoint = new Vec3();\nvar relpos = new Vec3();\nvar chassis_velocity_at_contactPoint = new Vec3();\nWheelInfo.prototype.updateWheel = function(chassis){\n    var raycastResult = this.raycastResult;\n\n    if (this.isInContact){\n        var project= raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\n        raycastResult.hitPointWorld.vsub(chassis.position, relpos);\n        chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\n        var projVel = raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\n        if (project >= -0.1) {\n            this.suspensionRelativeVelocity = 0.0;\n            this.clippedInvContactDotSuspension = 1.0 / 0.1;\n        } else {\n            var inv = -1 / project;\n            this.suspensionRelativeVelocity = projVel * inv;\n            this.clippedInvContactDotSuspension = inv;\n        }\n\n    } else {\n        // Not in contact : position wheel in a nice (rest length) position\n        raycastResult.suspensionLength = this.suspensionRestLength;\n        this.suspensionRelativeVelocity = 0.0;\n        raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\n        this.clippedInvContactDotSuspension = 1.0;\n    }\n};"]},"metadata":{},"sourceType":"script"}