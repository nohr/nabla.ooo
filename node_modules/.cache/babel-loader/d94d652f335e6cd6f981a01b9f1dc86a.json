{"ast":null,"code":"// Export classes\nmodule.exports = {\n  version: require('../package.json').version,\n  AABB: require('./collision/AABB'),\n  ArrayCollisionMatrix: require('./collision/ArrayCollisionMatrix'),\n  Body: require('./objects/Body'),\n  Box: require('./shapes/Box'),\n  Broadphase: require('./collision/Broadphase'),\n  Constraint: require('./constraints/Constraint'),\n  ContactEquation: require('./equations/ContactEquation'),\n  Narrowphase: require('./world/Narrowphase'),\n  ConeTwistConstraint: require('./constraints/ConeTwistConstraint'),\n  ContactMaterial: require('./material/ContactMaterial'),\n  ConvexPolyhedron: require('./shapes/ConvexPolyhedron'),\n  Cylinder: require('./shapes/Cylinder'),\n  DistanceConstraint: require('./constraints/DistanceConstraint'),\n  Equation: require('./equations/Equation'),\n  EventTarget: require('./utils/EventTarget'),\n  FrictionEquation: require('./equations/FrictionEquation'),\n  GSSolver: require('./solver/GSSolver'),\n  GridBroadphase: require('./collision/GridBroadphase'),\n  Heightfield: require('./shapes/Heightfield'),\n  HingeConstraint: require('./constraints/HingeConstraint'),\n  LockConstraint: require('./constraints/LockConstraint'),\n  Mat3: require('./math/Mat3'),\n  Material: require('./material/Material'),\n  NaiveBroadphase: require('./collision/NaiveBroadphase'),\n  ObjectCollisionMatrix: require('./collision/ObjectCollisionMatrix'),\n  Pool: require('./utils/Pool'),\n  Particle: require('./shapes/Particle'),\n  Plane: require('./shapes/Plane'),\n  PointToPointConstraint: require('./constraints/PointToPointConstraint'),\n  Quaternion: require('./math/Quaternion'),\n  Ray: require('./collision/Ray'),\n  RaycastVehicle: require('./objects/RaycastVehicle'),\n  RaycastResult: require('./collision/RaycastResult'),\n  RigidVehicle: require('./objects/RigidVehicle'),\n  RotationalEquation: require('./equations/RotationalEquation'),\n  RotationalMotorEquation: require('./equations/RotationalMotorEquation'),\n  SAPBroadphase: require('./collision/SAPBroadphase'),\n  SPHSystem: require('./objects/SPHSystem'),\n  Shape: require('./shapes/Shape'),\n  Solver: require('./solver/Solver'),\n  Sphere: require('./shapes/Sphere'),\n  SplitSolver: require('./solver/SplitSolver'),\n  Spring: require('./objects/Spring'),\n  Transform: require('./math/Transform'),\n  Trimesh: require('./shapes/Trimesh'),\n  Vec3: require('./math/Vec3'),\n  Vec3Pool: require('./utils/Vec3Pool'),\n  World: require('./world/World')\n};","map":{"version":3,"sources":["C:/Users/aite5/Desktop/nabla.ooo/node_modules/cannon/src/Cannon.js"],"names":["module","exports","version","require","AABB","ArrayCollisionMatrix","Body","Box","Broadphase","Constraint","ContactEquation","Narrowphase","ConeTwistConstraint","ContactMaterial","ConvexPolyhedron","Cylinder","DistanceConstraint","Equation","EventTarget","FrictionEquation","GSSolver","GridBroadphase","Heightfield","HingeConstraint","LockConstraint","Mat3","Material","NaiveBroadphase","ObjectCollisionMatrix","Pool","Particle","Plane","PointToPointConstraint","Quaternion","Ray","RaycastVehicle","RaycastResult","RigidVehicle","RotationalEquation","RotationalMotorEquation","SAPBroadphase","SPHSystem","Shape","Solver","Sphere","SplitSolver","Spring","Transform","Trimesh","Vec3","Vec3Pool","World"],"mappings":"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","sourcesContent":["// Export classes\nmodule.exports = {\n    version :                       require('../package.json').version,\n\n    AABB :                          require('./collision/AABB'),\n    ArrayCollisionMatrix :          require('./collision/ArrayCollisionMatrix'),\n    Body :                          require('./objects/Body'),\n    Box :                           require('./shapes/Box'),\n    Broadphase :                    require('./collision/Broadphase'),\n    Constraint :                    require('./constraints/Constraint'),\n    ContactEquation :               require('./equations/ContactEquation'),\n    Narrowphase :                   require('./world/Narrowphase'),\n    ConeTwistConstraint :           require('./constraints/ConeTwistConstraint'),\n    ContactMaterial :               require('./material/ContactMaterial'),\n    ConvexPolyhedron :              require('./shapes/ConvexPolyhedron'),\n    Cylinder :                      require('./shapes/Cylinder'),\n    DistanceConstraint :            require('./constraints/DistanceConstraint'),\n    Equation :                      require('./equations/Equation'),\n    EventTarget :                   require('./utils/EventTarget'),\n    FrictionEquation :              require('./equations/FrictionEquation'),\n    GSSolver :                      require('./solver/GSSolver'),\n    GridBroadphase :                require('./collision/GridBroadphase'),\n    Heightfield :                   require('./shapes/Heightfield'),\n    HingeConstraint :               require('./constraints/HingeConstraint'),\n    LockConstraint :                require('./constraints/LockConstraint'),\n    Mat3 :                          require('./math/Mat3'),\n    Material :                      require('./material/Material'),\n    NaiveBroadphase :               require('./collision/NaiveBroadphase'),\n    ObjectCollisionMatrix :         require('./collision/ObjectCollisionMatrix'),\n    Pool :                          require('./utils/Pool'),\n    Particle :                      require('./shapes/Particle'),\n    Plane :                         require('./shapes/Plane'),\n    PointToPointConstraint :        require('./constraints/PointToPointConstraint'),\n    Quaternion :                    require('./math/Quaternion'),\n    Ray :                           require('./collision/Ray'),\n    RaycastVehicle :                require('./objects/RaycastVehicle'),\n    RaycastResult :                 require('./collision/RaycastResult'),\n    RigidVehicle :                  require('./objects/RigidVehicle'),\n    RotationalEquation :            require('./equations/RotationalEquation'),\n    RotationalMotorEquation :       require('./equations/RotationalMotorEquation'),\n    SAPBroadphase :                 require('./collision/SAPBroadphase'),\n    SPHSystem :                     require('./objects/SPHSystem'),\n    Shape :                         require('./shapes/Shape'),\n    Solver :                        require('./solver/Solver'),\n    Sphere :                        require('./shapes/Sphere'),\n    SplitSolver :                   require('./solver/SplitSolver'),\n    Spring :                        require('./objects/Spring'),\n    Transform :                     require('./math/Transform'),\n    Trimesh :                       require('./shapes/Trimesh'),\n    Vec3 :                          require('./math/Vec3'),\n    Vec3Pool :                      require('./utils/Vec3Pool'),\n    World :                         require('./world/World'),\n};\n"]},"metadata":{},"sourceType":"script"}