{"ast":null,"code":"module.exports = Material;\n/**\n * Defines a physics material.\n * @class Material\n * @constructor\n * @param {object} [options]\n * @author schteppe\n */\n\nfunction Material(options) {\n  var name = '';\n  options = options || {}; // Backwards compatibility fix\n\n  if (typeof options === 'string') {\n    name = options;\n    options = {};\n  } else if (typeof options === 'object') {\n    name = '';\n  }\n  /**\n   * @property name\n   * @type {String}\n   */\n\n\n  this.name = name;\n  /**\n   * material id.\n   * @property id\n   * @type {number}\n   */\n\n  this.id = Material.idCounter++;\n  /**\n   * Friction for this material. If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n   * @property {number} friction\n   */\n\n  this.friction = typeof options.friction !== 'undefined' ? options.friction : -1;\n  /**\n   * Restitution for this material. If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n   * @property {number} restitution\n   */\n\n  this.restitution = typeof options.restitution !== 'undefined' ? options.restitution : -1;\n}\n\nMaterial.idCounter = 0;","map":{"version":3,"sources":["C:/Users/aite5/Desktop/nabla.ooo/node_modules/cannon/src/material/Material.js"],"names":["module","exports","Material","options","name","id","idCounter","friction","restitution"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,QAAT,CAAkBC,OAAlB,EAA0B;AACtB,MAAIC,IAAI,GAAG,EAAX;AACAD,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB,CAFsB,CAItB;;AACA,MAAG,OAAOA,OAAP,KAAoB,QAAvB,EAAgC;AAC5BC,IAAAA,IAAI,GAAGD,OAAP;AACAA,IAAAA,OAAO,GAAG,EAAV;AACH,GAHD,MAGO,IAAG,OAAOA,OAAP,KAAoB,QAAvB,EAAiC;AACpCC,IAAAA,IAAI,GAAG,EAAP;AACH;AAED;AACJ;AACA;AACA;;;AACI,OAAKA,IAAL,GAAYA,IAAZ;AAEA;AACJ;AACA;AACA;AACA;;AACI,OAAKC,EAAL,GAAUH,QAAQ,CAACI,SAAT,EAAV;AAEA;AACJ;AACA;AACA;;AACI,OAAKC,QAAL,GAAgB,OAAOJ,OAAO,CAACI,QAAf,KAA6B,WAA7B,GAA2CJ,OAAO,CAACI,QAAnD,GAA8D,CAAC,CAA/E;AAEA;AACJ;AACA;AACA;;AACI,OAAKC,WAAL,GAAmB,OAAOL,OAAO,CAACK,WAAf,KAAgC,WAAhC,GAA8CL,OAAO,CAACK,WAAtD,GAAoE,CAAC,CAAxF;AACH;;AAEDN,QAAQ,CAACI,SAAT,GAAqB,CAArB","sourcesContent":["module.exports = Material;\n\n/**\n * Defines a physics material.\n * @class Material\n * @constructor\n * @param {object} [options]\n * @author schteppe\n */\nfunction Material(options){\n    var name = '';\n    options = options || {};\n\n    // Backwards compatibility fix\n    if(typeof(options) === 'string'){\n        name = options;\n        options = {};\n    } else if(typeof(options) === 'object') {\n        name = '';\n    }\n\n    /**\n     * @property name\n     * @type {String}\n     */\n    this.name = name;\n\n    /**\n     * material id.\n     * @property id\n     * @type {number}\n     */\n    this.id = Material.idCounter++;\n\n    /**\n     * Friction for this material. If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n     * @property {number} friction\n     */\n    this.friction = typeof(options.friction) !== 'undefined' ? options.friction : -1;\n\n    /**\n     * Restitution for this material. If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n     * @property {number} restitution\n     */\n    this.restitution = typeof(options.restitution) !== 'undefined' ? options.restitution : -1;\n}\n\nMaterial.idCounter = 0;\n"]},"metadata":{},"sourceType":"script"}