{"ast":null,"code":"module.exports = ArrayCollisionMatrix;\n/**\n * Collision \"matrix\". It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\n * @class ArrayCollisionMatrix\n * @constructor\n */\n\nfunction ArrayCollisionMatrix() {\n  /**\n   * The matrix storage\n   * @property matrix\n   * @type {Array}\n   */\n  this.matrix = [];\n}\n/**\n * Get an element\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\n\n\nArrayCollisionMatrix.prototype.get = function (i, j) {\n  i = i.index;\n  j = j.index;\n\n  if (j > i) {\n    var temp = j;\n    j = i;\n    i = temp;\n  }\n\n  return this.matrix[(i * (i + 1) >> 1) + j - 1];\n};\n/**\n * Set an element\n * @method set\n * @param {Number} i\n * @param {Number} j\n * @param {Number} value\n */\n\n\nArrayCollisionMatrix.prototype.set = function (i, j, value) {\n  i = i.index;\n  j = j.index;\n\n  if (j > i) {\n    var temp = j;\n    j = i;\n    i = temp;\n  }\n\n  this.matrix[(i * (i + 1) >> 1) + j - 1] = value ? 1 : 0;\n};\n/**\n * Sets all elements to zero\n * @method reset\n */\n\n\nArrayCollisionMatrix.prototype.reset = function () {\n  for (var i = 0, l = this.matrix.length; i !== l; i++) {\n    this.matrix[i] = 0;\n  }\n};\n/**\n * Sets the max number of objects\n * @method setNumObjects\n * @param {Number} n\n */\n\n\nArrayCollisionMatrix.prototype.setNumObjects = function (n) {\n  this.matrix.length = n * (n - 1) >> 1;\n};","map":{"version":3,"sources":["C:/Users/aite5/Desktop/nabla.ooo/node_modules/cannon/src/collision/ArrayCollisionMatrix.js"],"names":["module","exports","ArrayCollisionMatrix","matrix","prototype","get","i","j","index","temp","set","value","reset","l","length","setNumObjects","n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,oBAAjB;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASA,oBAAT,GAAgC;AAE5B;AACJ;AACA;AACA;AACA;AACI,OAAKC,MAAL,GAAc,EAAd;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,oBAAoB,CAACE,SAArB,CAA+BC,GAA/B,GAAqC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAChDD,EAAAA,CAAC,GAAGA,CAAC,CAACE,KAAN;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,KAAN;;AACA,MAAID,CAAC,GAAGD,CAAR,EAAW;AACP,QAAIG,IAAI,GAAGF,CAAX;AACAA,IAAAA,CAAC,GAAGD,CAAJ;AACAA,IAAAA,CAAC,GAAGG,IAAJ;AACH;;AACD,SAAO,KAAKN,MAAL,CAAY,CAACG,CAAC,IAAEA,CAAC,GAAG,CAAN,CAAD,IAAW,CAAZ,IAAiBC,CAAjB,GAAmB,CAA/B,CAAP;AACH,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAL,oBAAoB,CAACE,SAArB,CAA+BM,GAA/B,GAAqC,UAASJ,CAAT,EAAYC,CAAZ,EAAeI,KAAf,EAAsB;AACvDL,EAAAA,CAAC,GAAGA,CAAC,CAACE,KAAN;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,KAAN;;AACA,MAAID,CAAC,GAAGD,CAAR,EAAW;AACP,QAAIG,IAAI,GAAGF,CAAX;AACAA,IAAAA,CAAC,GAAGD,CAAJ;AACAA,IAAAA,CAAC,GAAGG,IAAJ;AACH;;AACD,OAAKN,MAAL,CAAY,CAACG,CAAC,IAAEA,CAAC,GAAG,CAAN,CAAD,IAAW,CAAZ,IAAiBC,CAAjB,GAAmB,CAA/B,IAAoCI,KAAK,GAAG,CAAH,GAAO,CAAhD;AACH,CATD;AAWA;AACA;AACA;AACA;;;AACAT,oBAAoB,CAACE,SAArB,CAA+BQ,KAA/B,GAAuC,YAAW;AAC9C,OAAK,IAAIN,CAAC,GAAC,CAAN,EAASO,CAAC,GAAC,KAAKV,MAAL,CAAYW,MAA5B,EAAoCR,CAAC,KAAGO,CAAxC,EAA2CP,CAAC,EAA5C,EAAgD;AAC5C,SAAKH,MAAL,CAAYG,CAAZ,IAAe,CAAf;AACH;AACJ,CAJD;AAMA;AACA;AACA;AACA;AACA;;;AACAJ,oBAAoB,CAACE,SAArB,CAA+BW,aAA/B,GAA+C,UAASC,CAAT,EAAY;AACvD,OAAKb,MAAL,CAAYW,MAAZ,GAAqBE,CAAC,IAAEA,CAAC,GAAC,CAAJ,CAAD,IAAS,CAA9B;AACH,CAFD","sourcesContent":["module.exports = ArrayCollisionMatrix;\n\n/**\n * Collision \"matrix\". It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\n * @class ArrayCollisionMatrix\n * @constructor\n */\nfunction ArrayCollisionMatrix() {\n\n    /**\n     * The matrix storage\n     * @property matrix\n     * @type {Array}\n     */\n    this.matrix = [];\n}\n\n/**\n * Get an element\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\nArrayCollisionMatrix.prototype.get = function(i, j) {\n    i = i.index;\n    j = j.index;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    return this.matrix[(i*(i + 1)>>1) + j-1];\n};\n\n/**\n * Set an element\n * @method set\n * @param {Number} i\n * @param {Number} j\n * @param {Number} value\n */\nArrayCollisionMatrix.prototype.set = function(i, j, value) {\n    i = i.index;\n    j = j.index;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    this.matrix[(i*(i + 1)>>1) + j-1] = value ? 1 : 0;\n};\n\n/**\n * Sets all elements to zero\n * @method reset\n */\nArrayCollisionMatrix.prototype.reset = function() {\n    for (var i=0, l=this.matrix.length; i!==l; i++) {\n        this.matrix[i]=0;\n    }\n};\n\n/**\n * Sets the max number of objects\n * @method setNumObjects\n * @param {Number} n\n */\nArrayCollisionMatrix.prototype.setNumObjects = function(n) {\n    this.matrix.length = n*(n-1)>>1;\n};\n"]},"metadata":{},"sourceType":"script"}