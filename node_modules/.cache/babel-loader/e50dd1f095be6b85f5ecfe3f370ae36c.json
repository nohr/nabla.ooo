{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aite5\\\\Desktop\\\\nabla.ooo\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, Suspense } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { softShadows, OrbitControls, useGLTF, PerspectiveCamera, CameraShake } from '@react-three/drei'; //import Header from \"./components/header\"\n\nimport { proxy, useProxy } from 'valtio';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst state = proxy({\n  sand: \"#000000\"\n});\nsoftShadows();\n\nfunction Sand(props) {\n  _s();\n\n  const shakeRef = useRef();\n  const orbitRef = useRef();\n  useEffect(() => {\n    orbitRef.current.addEventListener(\"change\", () => {\n      const shake = shakeRef.current.getIntensity();\n      shakeRef.current.setIntensity(shake + 0.015);\n    });\n  }, [orbitRef]);\n  const group = useRef();\n  const {\n    nodes,\n    materials\n  } = useGLTF('Canvas_Sand.glb');\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    ...props,\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"group\", {\n      position: [-496.54, 0, -6000],\n      rotation: [-Math.PI, 0, -Math.PI],\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        geometry: nodes.Landscape3_1.geometry,\n        material: nodes.Landscape3_1.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.Landscape1.geometry,\n      material: nodes.Landscape1.material,\n      position: [318.05, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sand, \"DS4BkdOFp5qJt1rkpqdl9KR6EkI=\", false, function () {\n  return [useGLTF];\n});\n\n_c = Sand;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    colorManagement: true,\n    children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n      makeDefault: true,\n      position: [700, 800, -8000],\n      far: 800000,\n      fov: 60,\n      rotation: [Math.PI, Math.PI, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"gridHelper\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fog\", {\n      attach: \"fog\",\n      args: ['#848484', 4000, 40]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      intensity: 0.3,\n      color: \"white\",\n      position: [0, 6000, 5]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: /*#__PURE__*/_jsxDEV(Sand, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sand\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/aite5/Desktop/nabla.ooo/src/App.jsx"],"names":["React","useRef","useState","Suspense","Canvas","useFrame","softShadows","OrbitControls","useGLTF","PerspectiveCamera","CameraShake","proxy","useProxy","state","sand","Sand","props","shakeRef","orbitRef","useEffect","current","addEventListener","shake","getIntensity","setIntensity","group","nodes","materials","Math","PI","Landscape3_1","geometry","material","Landscape1","App"],"mappings":"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","sourcesContent":["import React, { useRef, useState, Suspense } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { softShadows, OrbitControls, useGLTF, PerspectiveCamera, CameraShake  } from '@react-three/drei'\n//import Header from \"./components/header\"\nimport { proxy, useProxy } from 'valtio'\nimport './App.css'\n\nconst state = proxy({sand:\"#000000\",})\n\nsoftShadows();\n\n\nfunction Sand(props) {\n  const shakeRef = useRef();\n  const orbitRef = useRef();\n  useEffect(() => {\n    orbitRef.current.addEventListener(\"change\", () => {\n      const shake = shakeRef.current.getIntensity();\n      shakeRef.current.setIntensity(shake + 0.015);\n    });\n  }, [orbitRef]);\n\n  const group = useRef()\n  const { nodes, materials } = useGLTF('Canvas_Sand.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group position={[-496.54, 0, -6000]} rotation={[-Math.PI, 0, -Math.PI]}>\n        <mesh geometry={nodes.Landscape3_1.geometry} material={nodes.Landscape3_1.material} />\n      </group>\n      <mesh geometry={nodes.Landscape1.geometry} material={nodes.Landscape1.material} position={[318.05, 0, 0]} />\n    </group>\n  )\n}\n\nfunction App() { \n  return (\n    <Canvas colorManagement >\n      \n      <PerspectiveCamera makeDefault position={[700,800,-8000]} far={800000} fov={60} rotation={[Math.PI, Math.PI, 0]} />\n      <gridHelper />\n      <fog attach=\"fog\" args={['#848484', 4000, 40]} />\n      <ambientLight intensity={0.3} />\n      <directionalLight  intensity={0.3} color=\"white\" position={[0, 6000, 5]} />\n      <Suspense fallback={null}>\n        <Sand />\n      </Suspense>\n      <OrbitControls />\n    </Canvas>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}