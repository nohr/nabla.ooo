{"ast":null,"code":"var Vec3 = require('./Vec3');\n\nvar Quaternion = require('./Quaternion');\n\nmodule.exports = Transform;\n/**\n * @class Transform\n * @constructor\n */\n\nfunction Transform(options) {\n  options = options || {};\n  /**\n   * @property {Vec3} position\n   */\n\n  this.position = new Vec3();\n\n  if (options.position) {\n    this.position.copy(options.position);\n  }\n  /**\n   * @property {Quaternion} quaternion\n   */\n\n\n  this.quaternion = new Quaternion();\n\n  if (options.quaternion) {\n    this.quaternion.copy(options.quaternion);\n  }\n}\n\nvar tmpQuat = new Quaternion();\n/**\n * @static\n * @method pointToLocaFrame\n * @param {Vec3} position\n * @param {Quaternion} quaternion\n * @param {Vec3} worldPoint\n * @param {Vec3} result\n */\n\nTransform.pointToLocalFrame = function (position, quaternion, worldPoint, result) {\n  var result = result || new Vec3();\n  worldPoint.vsub(position, result);\n  quaternion.conjugate(tmpQuat);\n  tmpQuat.vmult(result, result);\n  return result;\n};\n/**\n * Get a global point in local transform coordinates.\n * @method pointToLocal\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\n\n\nTransform.prototype.pointToLocal = function (worldPoint, result) {\n  return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\n};\n/**\n * @static\n * @method pointToWorldFrame\n * @param {Vec3} position\n * @param {Vec3} quaternion\n * @param {Vec3} localPoint\n * @param {Vec3} result\n */\n\n\nTransform.pointToWorldFrame = function (position, quaternion, localPoint, result) {\n  var result = result || new Vec3();\n  quaternion.vmult(localPoint, result);\n  result.vadd(position, result);\n  return result;\n};\n/**\n * Get a local point in global transform coordinates.\n * @method pointToWorld\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\n\n\nTransform.prototype.pointToWorld = function (localPoint, result) {\n  return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\n};\n\nTransform.prototype.vectorToWorldFrame = function (localVector, result) {\n  var result = result || new Vec3();\n  this.quaternion.vmult(localVector, result);\n  return result;\n};\n\nTransform.vectorToWorldFrame = function (quaternion, localVector, result) {\n  quaternion.vmult(localVector, result);\n  return result;\n};\n\nTransform.vectorToLocalFrame = function (position, quaternion, worldVector, result) {\n  var result = result || new Vec3();\n  quaternion.w *= -1;\n  quaternion.vmult(worldVector, result);\n  quaternion.w *= -1;\n  return result;\n};","map":{"version":3,"sources":["C:/Users/aite5/Desktop/nabla.ooo/node_modules/cannon/src/math/Transform.js"],"names":["Vec3","require","Quaternion","module","exports","Transform","options","position","copy","quaternion","tmpQuat","pointToLocalFrame","worldPoint","result","vsub","conjugate","vmult","prototype","pointToLocal","pointToWorldFrame","localPoint","vadd","pointToWorld","vectorToWorldFrame","localVector","vectorToLocalFrame","worldVector","w"],"mappings":"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","sourcesContent":["var Vec3 = require('./Vec3');\nvar Quaternion = require('./Quaternion');\n\nmodule.exports = Transform;\n\n/**\n * @class Transform\n * @constructor\n */\nfunction Transform(options) {\n    options = options || {};\n\n\t/**\n\t * @property {Vec3} position\n\t */\n\tthis.position = new Vec3();\n    if(options.position){\n        this.position.copy(options.position);\n    }\n\n\t/**\n\t * @property {Quaternion} quaternion\n\t */\n\tthis.quaternion = new Quaternion();\n    if(options.quaternion){\n        this.quaternion.copy(options.quaternion);\n    }\n}\n\nvar tmpQuat = new Quaternion();\n\n/**\n * @static\n * @method pointToLocaFrame\n * @param {Vec3} position\n * @param {Quaternion} quaternion\n * @param {Vec3} worldPoint\n * @param {Vec3} result\n */\nTransform.pointToLocalFrame = function(position, quaternion, worldPoint, result){\n    var result = result || new Vec3();\n    worldPoint.vsub(position, result);\n    quaternion.conjugate(tmpQuat);\n    tmpQuat.vmult(result, result);\n    return result;\n};\n\n/**\n * Get a global point in local transform coordinates.\n * @method pointToLocal\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\nTransform.prototype.pointToLocal = function(worldPoint, result){\n    return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\n};\n\n/**\n * @static\n * @method pointToWorldFrame\n * @param {Vec3} position\n * @param {Vec3} quaternion\n * @param {Vec3} localPoint\n * @param {Vec3} result\n */\nTransform.pointToWorldFrame = function(position, quaternion, localPoint, result){\n    var result = result || new Vec3();\n    quaternion.vmult(localPoint, result);\n    result.vadd(position, result);\n    return result;\n};\n\n/**\n * Get a local point in global transform coordinates.\n * @method pointToWorld\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\nTransform.prototype.pointToWorld = function(localPoint, result){\n    return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\n};\n\n\nTransform.prototype.vectorToWorldFrame = function(localVector, result){\n    var result = result || new Vec3();\n    this.quaternion.vmult(localVector, result);\n    return result;\n};\n\nTransform.vectorToWorldFrame = function(quaternion, localVector, result){\n    quaternion.vmult(localVector, result);\n    return result;\n};\n\nTransform.vectorToLocalFrame = function(position, quaternion, worldVector, result){\n    var result = result || new Vec3();\n    quaternion.w *= -1;\n    quaternion.vmult(worldVector, result);\n    quaternion.w *= -1;\n    return result;\n};\n"]},"metadata":{},"sourceType":"script"}