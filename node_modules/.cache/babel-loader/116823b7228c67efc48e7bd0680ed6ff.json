{"ast":null,"code":"module.exports = Particle;\n\nvar Shape = require('./Shape');\n\nvar Vec3 = require('../math/Vec3');\n/**\n * Particle shape.\n * @class Particle\n * @constructor\n * @author schteppe\n * @extends Shape\n */\n\n\nfunction Particle() {\n  Shape.call(this, {\n    type: Shape.types.PARTICLE\n  });\n}\n\nParticle.prototype = new Shape();\nParticle.prototype.constructor = Particle;\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3}\n */\n\nParticle.prototype.calculateLocalInertia = function (mass, target) {\n  target = target || new Vec3();\n  target.set(0, 0, 0);\n  return target;\n};\n\nParticle.prototype.volume = function () {\n  return 0;\n};\n\nParticle.prototype.updateBoundingSphereRadius = function () {\n  this.boundingSphereRadius = 0;\n};\n\nParticle.prototype.calculateWorldAABB = function (pos, quat, min, max) {\n  // Get each axis max\n  min.copy(pos);\n  max.copy(pos);\n};","map":{"version":3,"sources":["C:/Users/aite5/Desktop/nabla.ooo/node_modules/cannon/src/shapes/Particle.js"],"names":["module","exports","Particle","Shape","require","Vec3","call","type","types","PARTICLE","prototype","constructor","calculateLocalInertia","mass","target","set","volume","updateBoundingSphereRadius","boundingSphereRadius","calculateWorldAABB","pos","quat","min","max","copy"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,cAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,QAAT,GAAmB;AACfC,EAAAA,KAAK,CAACG,IAAN,CAAW,IAAX,EAAiB;AACbC,IAAAA,IAAI,EAAEJ,KAAK,CAACK,KAAN,CAAYC;AADL,GAAjB;AAGH;;AACDP,QAAQ,CAACQ,SAAT,GAAqB,IAAIP,KAAJ,EAArB;AACAD,QAAQ,CAACQ,SAAT,CAAmBC,WAAnB,GAAiCT,QAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAA,QAAQ,CAACQ,SAAT,CAAmBE,qBAAnB,GAA2C,UAASC,IAAT,EAAcC,MAAd,EAAqB;AAC5DA,EAAAA,MAAM,GAAGA,MAAM,IAAI,IAAIT,IAAJ,EAAnB;AACAS,EAAAA,MAAM,CAACC,GAAP,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB;AACA,SAAOD,MAAP;AACH,CAJD;;AAMAZ,QAAQ,CAACQ,SAAT,CAAmBM,MAAnB,GAA4B,YAAU;AAClC,SAAO,CAAP;AACH,CAFD;;AAIAd,QAAQ,CAACQ,SAAT,CAAmBO,0BAAnB,GAAgD,YAAU;AACtD,OAAKC,oBAAL,GAA4B,CAA5B;AACH,CAFD;;AAIAhB,QAAQ,CAACQ,SAAT,CAAmBS,kBAAnB,GAAwC,UAASC,GAAT,EAAaC,IAAb,EAAkBC,GAAlB,EAAsBC,GAAtB,EAA0B;AAC9D;AACAD,EAAAA,GAAG,CAACE,IAAJ,CAASJ,GAAT;AACAG,EAAAA,GAAG,CAACC,IAAJ,CAASJ,GAAT;AACH,CAJD","sourcesContent":["module.exports = Particle;\n\nvar Shape = require('./Shape');\nvar Vec3 = require('../math/Vec3');\n\n/**\n * Particle shape.\n * @class Particle\n * @constructor\n * @author schteppe\n * @extends Shape\n */\nfunction Particle(){\n    Shape.call(this, {\n        type: Shape.types.PARTICLE\n    });\n}\nParticle.prototype = new Shape();\nParticle.prototype.constructor = Particle;\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3}\n */\nParticle.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    target.set(0, 0, 0);\n    return target;\n};\n\nParticle.prototype.volume = function(){\n    return 0;\n};\n\nParticle.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = 0;\n};\n\nParticle.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    // Get each axis max\n    min.copy(pos);\n    max.copy(pos);\n};\n"]},"metadata":{},"sourceType":"script"}